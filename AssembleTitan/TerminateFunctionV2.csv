//*****************************TERMINATE CHARACTER FUNCTION***********************************
// This function will replace a character glyph with a terminate glyph
// PARAMETERS:			r3 - glyph MEMORY location
// LOCAL VARIABLES:		r1 - glyph INDEX of TERMINATE
//						r2 - Counter
//						r28 - Return Address
// GLOBAL VARIABLES:	giTERMINATE - glyph INDEX value of the TERMINATE glyph
//						SOUND - I/O MEMORY space for sound
// RETURN VARIABLES:

terminate:
addi,r28,r31,0,				//Save the return address

//****CHECK THIS CODE****
//Trigger the death sound
addi,r1,r0,DEATH,				//Trigger the death sound
str,r1,r0,SOUND,				//Store the trigger into the SOUND MEMORY space

//Set up a counter
addi,r2,r0,100000,			//Initialize counter to 1000
add,r2,r2,r2,				//Increment the counter
add,r2,r2,r2,
add,r2,r2,r2,
add,r2,r2,r2,
add,r2,r2,r2,
add,r2,r2,r2,

//terminateLoop:
addi,r1,r0,giTERMINATE,		//put the TERMINATE glyph into r1
//TOP LEFT HEAD
str,r1,r3,0,        		//Sets the old position to be the background
//TOP RIGHT HEAD
addi,r1,r1,1,				//go to the next glyph INDEX value
addi,r3,r3,1,       		//go to the next glyph LOCATION
str,r1,r3,0,				//set the old position to be the background
//BOTTOM LEFT HEAD
addi,r1,r1,1,				//go to the next glyph INDEX value
addi,r3,r3,79,      		//go to the next glyph LOCATION
str,r1,r3,0,				//set the old position to be the background
//BOTTOM RIGHT HEAD
addi,r1,r1,1,				//go to the next glyph INDEX value
addi,r3,r3,1,       		//go to the next glyph LOCATION
str,r1,r3,0,				/set the old position to be the background
//LEFT ARM
addi,r1,r1,1,				//go to the next glyph INDEX value
addi,r3,r3,79,      		//go to the next glyph LOCATION
str,r1,r3,0,				//set the old position to be the background
//RIGHT ARM
addi,r1,r1,1,				//go to the next glyph INDEX value
addi,r3,r3,1,       		//go to the next glyph LOCATION
str,r1,r3,0,				//set the old position to be the background
//LEFT LEG
addi,r1,r1,1,				//go to the next glyph INDEX value
addi,r3,r3,79,      		//go to the next glyph LOCATION
str,r1,r3,0,				//set the old position to be the background
//RIGHT LEG
addi,r1,r1,1,				//go to the next glyph INDEX value
addi,r3,r3,1,       		//go to the next glyph LOCATION
str,r1,r3,0,				//set the old position to be the background

subi,r3,r3,241,				//set r3 back to the top of the glyph character

//addi,r27,r1,0,				//Save the current glyph INDEX
//addi,r26,r2,0,				//Save the current counter
//addi,r25,r3,0,				//Save the current MEMORY location
//jal,DrawBackground:,		//Jump and Link to the background to emulate GLYching
//addi,r1,r27,0,				//Restore the current glyph INDEX
//addi,r2,r26,0,				//Restore the current counter
//addi,r3,r25,0,				//Restore the current MEMORY location

terminateLoop:
subi,r2,r2,1,				//Decrement the counter
cmpi,x,r2,0,				//Check if we've reached zero
bne,terminateLoop:,			//If we're not done, branch to the top of the loop

subi,r2,r3,VGA,				//set r2 back to the top of the glyph character's glyph LOCATION
jal,DrawBackground:,		//Jump and Link to the background to emulate GLYching

addi,r31,r28,0,				//Restore the Return Address
jra,						//jump to the Return Address of where the function was called

