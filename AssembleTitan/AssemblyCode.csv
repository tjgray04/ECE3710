//Global Variables
gcon,VGABaseAddr,32768,		//Binary: 10_00_0000_0000_0000, this is the base address to the VGA memory space
gcon,IOBaseAddr,49152		//Binary: 11_00_0000_0000_0000, this is the base address to the IO memory space

//Initialization - stores a glyph into a location on the VGA screen
addi,r12,r0,100,			//r12 = 100, a glyph location to write to
addi,r13,r12,VGABaseAddr,	//add r12 to the base address and store it in r13 as a location to write to
addi,r11,r0,32,			 	//Store the glyph index into r11
str,r11,r13,0,				//store the value of the glyph index in r11 in to the glyph location of r13

//Game Loop
loop:
addi,r17,r12,0,				//add r12 to r17, so r17 starts at 100
addi,r18,r17,VGABaseAddr,	//add r17 to the base address for VGA and store it into r18 as the new location to write to
addi,r12,r12,1,				//increment the glyph location to write to
addi,r13,r12,VGABaseAddr,	//add r12 to the base address for VGA and store it into r13 as the new location to write to
//str,r0,r18,0,				//This is not necessary
str,r11,r13,0,				//store the glyph index into the glyph address of r13
str,r11,r18,0,				//store the glyph index into the glyph address of r18

addi,r4,r0,131071,			//r4 = 0 + 1000

pause:
cmp,x,r4,r0,		//check to see if the counter is 0.
beq,loop:,			// if the counter has reached 0, jump to loop.
subi,r4,r4,1,		// r4 =r4 -1.
j,pause:,			//jump loop


